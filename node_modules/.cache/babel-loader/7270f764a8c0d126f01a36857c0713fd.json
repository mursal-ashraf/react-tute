{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\n\nconst useFetch = url => {\n  _s();\n\n  const [data, setData] = useState(null);\n  const [isPending, setIsPending] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    setTimeout(() => {\n      fetch(url).then(response => {\n        if (!response.ok) {\n          throw Error('Could not fetch data');\n        }\n\n        return response.json();\n      }).then(response => {\n        setData(response); // console.log(response.blogs);\n\n        setIsPending(false);\n        setError(null);\n      }).catch(err => {\n        // console.log('fetch failed ', err.message);\n        setError(err.message);\n        setIsPending(false);\n      });\n    }, 1000);\n    return () => console.log('clean up');\n  }, [url]);\n  return {\n    data,\n    isPending,\n    error\n  };\n};\n\n_s(useFetch, \"VxPkICXS4AfkXU1R8tuEJAA8e58=\");\n\nexport default useFetch;","map":{"version":3,"names":["useEffect","useState","useFetch","url","data","setData","isPending","setIsPending","error","setError","setTimeout","fetch","then","response","ok","Error","json","catch","err","message","console","log"],"sources":["/Users/mashraf/Desktop/dojo-blog/src/useFetch.js"],"sourcesContent":["import { useEffect, useState } from \"react\";\n\nconst useFetch = (url) => {\n    const [data, setData] = useState(null);\n    const [isPending, setIsPending] = useState(true);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        setTimeout(() => {\n            fetch(url)\n            .then((response) => {\n                if (!response.ok){\n                    throw Error('Could not fetch data');\n                }\n                return response.json();\n            }).then((response) => {\n                setData(response);\n                // console.log(response.blogs);\n                setIsPending(false);\n                setError(null);\n            }).catch((err) => {\n                // console.log('fetch failed ', err.message);\n                setError(err.message);\n                setIsPending(false);\n            });\n        }, 1000);\n\n        return () => console.log('clean up');\n    }, [url]);\n\n    return { data, isPending, error};\n}\n\nexport default useFetch;"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,QAAQ,GAAIC,GAAD,IAAS;EAAA;;EACtB,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,IAAD,CAAhC;EACA,MAAM,CAACK,SAAD,EAAYC,YAAZ,IAA4BN,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,IAAD,CAAlC;EAEAD,SAAS,CAAC,MAAM;IACZU,UAAU,CAAC,MAAM;MACbC,KAAK,CAACR,GAAD,CAAL,CACCS,IADD,CACOC,QAAD,IAAc;QAChB,IAAI,CAACA,QAAQ,CAACC,EAAd,EAAiB;UACb,MAAMC,KAAK,CAAC,sBAAD,CAAX;QACH;;QACD,OAAOF,QAAQ,CAACG,IAAT,EAAP;MACH,CAND,EAMGJ,IANH,CAMSC,QAAD,IAAc;QAClBR,OAAO,CAACQ,QAAD,CAAP,CADkB,CAElB;;QACAN,YAAY,CAAC,KAAD,CAAZ;QACAE,QAAQ,CAAC,IAAD,CAAR;MACH,CAXD,EAWGQ,KAXH,CAWUC,GAAD,IAAS;QACd;QACAT,QAAQ,CAACS,GAAG,CAACC,OAAL,CAAR;QACAZ,YAAY,CAAC,KAAD,CAAZ;MACH,CAfD;IAgBH,CAjBS,EAiBP,IAjBO,CAAV;IAmBA,OAAO,MAAMa,OAAO,CAACC,GAAR,CAAY,UAAZ,CAAb;EACH,CArBQ,EAqBN,CAAClB,GAAD,CArBM,CAAT;EAuBA,OAAO;IAAEC,IAAF;IAAQE,SAAR;IAAmBE;EAAnB,CAAP;AACH,CA7BD;;GAAMN,Q;;AA+BN,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}